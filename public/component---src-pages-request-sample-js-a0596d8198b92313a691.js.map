{"version":3,"sources":["webpack:///./src/pages/request-sample.js","webpack:///./src/components/Base/QueryButton/QueryButton.js","webpack:///./src/components/Enquiry/Form.js"],"names":["props","slug","title","headingText","linkText","QueryButton","text","style","type","className","href","Form","useForm","register","handleSubmit","errors","reset","useState","isValidCaptcha","setIsValidCaptcha","captchaSiteKey","setCaptchaSiteKey","showPop","setShowPop","message","setMessage","useEffect","a","getCaptcha","response","CAPTCHA_SITE_KEY","fetchData","onSubmit","data","post","flag","alert","error","console","log","class","id","onClick","toLowerCase","replace","split","join","ref","required","placeholder","aria-label","name","pattern","value","emailId","rows","sitekey","onChange","paddingLeft","marginBottom","marginTop"],"mappings":"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","file":"component---src-pages-request-sample-js-a0596d8198b92313a691.js","sourcesContent":["import React from \"react\"\n\nimport SEO from \"../components/Base/SEO\"\nimport Form from \"../components/Enquiry/Form\"\nimport Layout from \"../components/Base/Layout\"\n\nexport default function (props) {\n  const slug = props[`*`]\n  return (\n    <Layout>\n      <SEO title={\"Sheer Analytics and Insights Request Sample\"} />\n      <Form headingText={\"sample\"} linkText={\"RequestSample\"} slug={slug} />\n    </Layout>\n  )\n}\n","import React from 'react';\n\nimport './queryButton.css';\n\nexport default function QueryButton({ text, style, type, slug }) {\n\n  if (type === 'submit') {\n    return (\n      <button type=\"submit\" className={\"learn-more tran3s p-color-bg hvr-shutter-out-horizontal-two \" + style}>{text}</button>\n    )\n  } else {\n    return (\n      <a href={`/market-report-research/${slug}`} className={\"learn-more tran3s p-color-bg hvr-shutter-out-horizontal-two \" + style}>{text}</a>\n    )\n  }\n}","import React, { useState, useEffect } from \"react\"\nimport { useForm } from \"react-hook-form\"\nimport ReCAPTCHA from \"react-google-recaptcha\"\n\nimport { post, getCaptcha } from \"../../network/apiCalls\"\n\nimport QueryButton from '../Base/QueryButton/QueryButton';\n\nimport './form.css';\n\nexport default function Form({ slug, headingText }) {\n  slug = slug || '';\n\n  const { register, handleSubmit, errors, reset } = useForm();\n  const [isValidCaptcha, setIsValidCaptcha] = useState(false);\n  const [captchaSiteKey, setCaptchaSiteKey] = useState(null);\n  const [showPop, setShowPop] = useState(false);\n  const [message, setMessage] = useState('');\n  // const captchaSiteKey = `${process.env.CAPTCHA_SITE_KEY}`//Fetch from api\n\n  useEffect(() => {\n    async function fetchData() {\n      // You can await here\n      const response = await getCaptcha();\n      setCaptchaSiteKey(response.CAPTCHA_SITE_KEY);\n    }\n    fetchData();\n\n  }, []);\n\n  const onSubmit = async data => {\n    try {\n      if (isValidCaptcha) {\n        post(data, (flag) => {\n          if (flag) {\n            reset();\n            setMessage('Thanks for email, We will get back to you as soon as possible.')\n            setShowPop(true);\n          } else {\n            setMessage('Oops, something went wrong. We will fix this as soon as possible and get back to you.')\n            setShowPop(true);\n          }\n        })\n      } else {\n        alert(\"Please Validate the captcha\")\n      }\n    } catch (error) {\n      console.log(\"errors....\", error)\n    }\n  }\n\n  function changeCaptchaValid(value) {\n    setIsValidCaptcha(value)\n  }\n\n  function closePopUp() {\n    setShowPop(false);\n  }\n\n  if (captchaSiteKey === null) {\n    return (\n      <div>...Loading</div>\n    )\n  }\n\n  return (\n    <div class=\"container query-form\">\n      {\n        showPop ? <div id=\"popup1\" class=\"overlay\">\n          <div class=\"popup\">\n            {/* <h2>Here i am</h2> */}\n            <a class=\"close\" href=\"#\" onClick={closePopUp}>&times;</a>\n            <div class=\"content query-section\">\n              <div>{message}</div><br></br>\n              <QueryButton text=\"Go Back\" slug={slug.toLowerCase()} type=\"button\" />\n            </div>\n          </div>\n        </div> : null\n      }\n      <form onSubmit={handleSubmit(onSubmit)} type=\"POST\">\n        <h1 className=\"mb-5\">\n          Please fill the below form to get the {headingText} for:{\" \"}\n          <span className=\"query-report-title\">{slug\n            .replace(\"-21\", \"\")\n            .split(\"-\")\n            .join(\" \")}\n          </span>\n        </h1>\n        <div className=\"row\">\n          <div className=\"col-sm-6 mb-2\">\n            <input\n              type=\"text\"\n              ref={register({\n                required: \"name\"\n              })}\n              class=\"form-control mb-2\"\n              placeholder=\"Your Name*\"\n              aria-label=\"Your Name*\"\n              id=\"name\"\n              name=\"name\"\n            />\n          </div>\n          <div className=\"col-sm-6 mb-2\">\n            <input\n              type=\"email\"\n              ref={register({\n                required: \"Required\",\n                pattern: {\n                  value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                  message: \"invalid email address\",\n                },\n              })}\n              className={`form-control mb-2 ${errors.emailId ? \" error\" : \"\"}`}\n              placeholder=\"Your Email Address*\"\n              aria-label=\"Your Email Address*\"\n              id=\"emailId\"\n              name=\"emailId\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-6 mb-2\">\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder=\"Job Title\"\n              aria-label=\"Job Title*\"\n              ref={register}\n              name=\"jobTitle\"\n            />\n          </div>\n          <div className=\"col-sm-6 mb-2\">\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder=\"Company Name\"\n              aria-label=\"Your Name*\"\n              ref={register}\n              name=\"companyName\"\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-sm-12 mb-2\">\n            <input\n              type=\"text\"\n              className=\"form-control mb-2\"\n              placeholder=\"Mobile Number\"\n              aria-label=\"Your Contact Number\"\n              ref={register}\n              name=\"number\"\n            />\n          </div>\n        </div>\n        <textarea\n          type=\"textarea\"\n          className={`form-control mb-2 ${errors.message ? ' error' : ''}`}\n          placeholder=\"Message\"\n          aria-label=\"Your Message\"\n          rows=\"8\"\n          ref={register({\n            required: \"Required\"\n          })}\n          name=\"message\"\n        />\n        <input type=\"hidden\" ref={register} value=\"2\" id=\"type\" name=\"type\" />\n        <input\n          type=\"hidden\"\n          ref={register}\n          value={slug}\n          id=\"report\"\n          name=\"report\"\n        />\n        <ReCAPTCHA sitekey={captchaSiteKey} onChange={changeCaptchaValid} />\n        <div\n          className={`col-md-12 query-section double-grid`}\n          style={{ paddingLeft: \"0px\", marginBottom: \"0px\", marginTop: \"0.5em\" }}\n        >\n          <QueryButton text=\"Submit\" type=\"submit\" />\n          <QueryButton text=\"Cancel\" slug={slug.toLowerCase()} type=\"button\" style=\"maringLeft30\" />\n        </div>\n      </form>\n    </div>\n  )\n}\n"],"sourceRoot":""}